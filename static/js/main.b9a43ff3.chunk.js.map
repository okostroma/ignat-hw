{"version":3,"sources":["components/Nav/Nav.module.css","components/Monday/Message/Message.module.css","components/Monday/ScreenArea/Names.module.css","logo.svg","components/Monday/MyName/MyName.module.css","components/Monday/ScreenArea/Screen.module.css","components/Monday/Avatar/avatar.png","components/Monday/Avatar/Avatar.module.css","components/Monday/Monday.module.css","components/Tuesday/load.gif","components/Monday/MyName/MyName.jsx","components/Monday/Message/Message.jsx","components/Monday/Avatar/Avatar.jsx","components/Monday/ScreenArea/Name.jsx","components/Monday/ScreenArea/Names.jsx","components/Monday/ScreenArea/Button.jsx","components/Monday/ScreenArea/Text.jsx","components/Monday/ScreenArea/Screen.jsx","components/Monday/Monday.jsx","components/Nav/Nav.jsx","components/Tuesday/AddNewItemForm.js","components/Tuesday/TodoListTask.js","components/Tuesday/TodoListTasks.js","components/Tuesday/TodoListFooter.js","components/Tuesday/TodoListTitle.js","components/Tuesday/stateMod.js","components/Tuesday/Tuesday.jsx","components/Tuesday/Loader.js","components/Tuesday/AppTuesday.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","MyName","className","classes","name1","name2","Message","addQualities","this","props","quality","map","activeClassName","active","activeClass","key","id","title","message","author","content","time","Date","toLocaleTimeString","hour","minute","React","Component","Avatar","avatar","src","alt","Name","name","Names","namesNew","names","item","Button","state","error","onAddNewName","newName","trim","setState","onAddName","isNameChanged","e","currentTarget","value","onKeyPress","onChange","type","onClick","Text","counter","Screen","buttonArea","text","Monday","qualities","newText","Math","round","random","newNames","loadingL","monday","Nav","isActive","onClickBtn","activeBtn","menu","btnMenu","btnLines","nav","to","AddNewItemForm","onAddItemClick","newTitle","addItem","onTitleChanged","render","placeholder","TodoListTask","isEditMode","isEditModePriority","priority","activatedEditMode","deActivatedEditMode","onIsDoneChanged","changeStatus","task","checked","onIsTitleChange","changeTitle","onIsPriorityChanged","changePriority","isTaskDeleted","deleteTask","isDone","autoFocus","onBlur","onDoubleClick","icon","faTimes","TodoListTasks","taskElement","tasks","TodoListFooter","isHidden","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","onShowFiltersClick","onHideFiltersClick","classForAll","filerValue","classForCompleted","classForActive","TodoListTitle","saveState","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","Tuesday","filterValue","nextTaskId","saveLocalStorage","restoreLocalStorage","stateNew","forEach","t","addTask","newTask","newTasks","taskId","filter","isTodoListDeleted","deleteTodoList","newFilterValue","changeTask","obj","filteredTasks","Loader","AppTuesday","todolists","loading","nextTodoListId","addTodoList","todoList","newTodoList","todoListId","todolist","tl","setTimeout","App","path","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.b9a43ff3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__339R7\",\"active\":\"Nav_active__mKjeX\",\"menu\":\"Nav_menu__EwXDw\",\"btnMenu\":\"Nav_btnMenu__380tJ\",\"btnLines\":\"Nav_btnLines__2gCX_\",\"activeBtn\":\"Nav_activeBtn__1zERz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__C76vj\",\"author\":\"Message_author__mPDlB\",\"content\":\"Message_content__2f_2F\",\"time\":\"Message_time__3q-HT\",\"activeClass\":\"Message_activeClass__9qTw8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"names\":\"Names_names__DoAZv\",\"item\":\"Names_item__3CVO6\"};","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name1\":\"MyName_name1__1Xty8\",\"name2\":\"MyName_name2__UJ5ug\",\"anim\":\"MyName_anim__2NqSd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonArea\":\"Screen_buttonArea__1tuiQ\",\"text\":\"Screen_text__25RuK\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.adf3f16b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__3xPXg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"monday\":\"Monday_monday__30d8-\"};","module.exports = __webpack_public_path__ + \"static/media/load.5bc723f8.gif\";","import React from 'react';\r\nimport classes from './MyName.module.css'\r\n\r\n\r\nconst MyName = () => {\r\n    return (<div>\r\n            <p className={classes.name1}>Кострома Оксана Владимировна</p>\r\n            <p className={classes.name2}>Magic</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyName;\r\n","import React from 'react';\r\nimport classes from './Message.module.css'\r\n\r\n\r\nclass Message extends React.Component {\r\n\r\n\r\n\r\n\r\n    render() {\r\n        let addQualities = this.props.quality.map(quality => {\r\n            let activeClassName = quality.active ? classes.activeClass : '';\r\n            return <span key={quality.id} className={activeClassName}>{quality.title + ' | '}</span>\r\n        });\r\n\r\n        return (\r\n            <div className={classes.message}>\r\n                <p className={classes.author}>Кострома Оксана</p>\r\n                <p className={classes.content}>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit olore eu fugiat nulla pariatur.\r\n                    Lorem ipsum dolor sit amet.\r\n                </p>\r\n                {addQualities}\r\n                <p className={classes.time}> {new Date().toLocaleTimeString('ru-RU', {\r\n                    hour: '2-digit',\r\n                    minute: '2-digit'\r\n                })}</p>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport avatar from './avatar.png'\r\nimport classes from './Avatar.module.css'\r\n\r\n\r\nconst Avatar = () => {\r\n    return (<div>\r\n            <img className={classes.avatar} src={avatar} alt=\"avatar\"/>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Avatar;\r\n","import React from 'react';\r\nimport classes from './Names.module.css'\r\n\r\n\r\n\r\nclass Name extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <span> {this.props.name}</span>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Name;\r\n","import React from 'react';\r\nimport classes from './Names.module.css'\r\nimport Name from \"./Name\";\r\n\r\n\r\n\r\nclass Names extends React.Component {\r\n\r\n\r\n    render() {\r\n        let namesNew = this.props.names.map(name => <Name key={name.id} name={name.name}/>)\r\n\r\n\r\n        return (\r\n            <div className={classes.names}>\r\n                <div className={classes.item}>\r\n                    <div>{namesNew}</div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Names;\r\n","import React from 'react';\r\nimport classes from './Button.module.css'\r\nimport '../../../App.css';\r\n\r\n\r\n\r\n\r\nclass Button extends React.Component {\r\n\r\n    state = {\r\n        error: false,\r\n        title: ''\r\n    }\r\n\r\n\r\n\r\n    onAddNewName = () => {\r\n        let newName = this.state.title.trim();\r\n\r\n        if (newName === '') {this.setState({error: true})} else {this.setState({title: '', error: false})\r\n            this.props.onAddName(newName)}\r\n\r\n    }\r\n\r\n    isNameChanged = (e) => {\r\n        this.setState({\r\n            title: e.currentTarget.value,\r\n            error: false\r\n        })\r\n    }\r\n\r\n    onKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.onAddNewName();\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        let error =  this.state.error  ? 'error' : '';\r\n\r\n\r\n        return (\r\n            <div>\r\n                <input className={error} value={this.state.title} onKeyPress={this.onKeyPress} onChange={this.isNameChanged} type=\"text\"/>\r\n                <button onClick={this.onAddNewName} > Click </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\n\r\n\r\n\r\nclass Text extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <span>{this.props.counter} ~ </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Text;\r\n","import React from 'react';\r\nimport Button from \"./Button\";\r\nimport Text from \"./Text\";\r\nimport classes from './Screen.module.css'\r\n\r\n\r\n\r\nclass Screen extends React.Component {\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div className={classes.buttonArea}>\r\n                    <div className={classes.text}>\r\n                        <Text counter={this.props.counter}/>\r\n                    </div>\r\n\r\n                    <Button onAddName={this.props.onAddName}/>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Screen;\r\n","import React from 'react';\r\nimport logo from '../../logo.svg';\r\nimport '../../App.css';\r\nimport MyName from \"./MyName/MyName\";\r\nimport Message from \"./Message/Message\";\r\nimport Avatar from \"./Avatar/Avatar\";\r\nimport Names from \"./ScreenArea/Names\";\r\nimport Screen from \"./ScreenArea/Screen\";\r\nimport classes from './Monday.module.css'\r\n\r\n\r\nclass Monday extends React.Component {\r\n\r\nstate = {\r\n    qualities: [\r\n        {id: 0, title: 'good-tempered', active: false},\r\n        {id: 1, title: 'funny', active: true},\r\n        {id: 2, title: 'responsible', active: false},\r\n        {id: 3, title: 'kind', active: false}\r\n    ],\r\n    counter: 1,\r\n    names: [\r\n        {id: 0, name: 'Oxa'}\r\n    ]\r\n\r\n\r\n}\r\n\r\n\r\n    onAddName = (newName) => {\r\n\r\n         let newText = {\r\n             id: Math.round(Math.random()*10),\r\n             name: newName\r\n         }\r\n\r\n         let newNames = [...this.state.names, newText]\r\n\r\n\r\n        this.setState({\r\n            names: newNames,\r\n            counter: this.state.counter + 1\r\n\r\n        });\r\n    }\r\n\r\n\r\n    loadingL = () => {\r\n        return 'L'\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n\r\n            <div className={classes.monday}>\r\n                <MyName/>\r\n                <Avatar/>\r\n                <Message quality={this.state.qualities} />\r\n                <Screen counter={this.state.counter} onAddName={this.onAddName}/>\r\n                <Names names={this.state.names}/>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Monday;\r\n","import React from 'react';\r\nimport logo from '../../logo.svg';\r\nimport '../../App.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport classes from './Nav.module.css'\r\n\r\n\r\nclass Nav extends React.Component {\r\n\r\nstate = {\r\n    isActive: false\r\n}\r\n\r\nonClickBtn = () => {\r\n    this.setState({\r\n        isActive: true\r\n    })\r\n    if (this.state.isActive) {\r\n        this.setState({\r\n            isActive: false\r\n        })\r\n    }\r\n}\r\n\r\n\r\n    render() {\r\n\r\n    let active = this.state.isActive ? classes.activeBtn : '';\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div className={classes.menu}>\r\n                <div onClick={this.onClickBtn} className={classes.btnMenu} >\r\n                    <div className={`${classes.btnLines} ${active}`}>\r\n                    <div  className={classes.nav}>\r\n                    <NavLink to='/monday' activeClassName={classes.active}>\r\n                        <p>Monday</p> </NavLink>\r\n                    <NavLink  to='/tuesday' activeClassName={classes.active}>\r\n                        <p>Tuesday</p> </NavLink>\r\n                    <NavLink  to='/wednesday' activeClassName={classes.active}>\r\n                        <p>Wednesday</p> </NavLink>\r\n                    <NavLink  to='/thursday' activeClassName={classes.active}>\r\n                        <p>Thursday</p> </NavLink>\r\n                    <NavLink  to='/friday' activeClassName={classes.active}>\r\n                        <p>Friday</p> </NavLink>\r\n\r\n                </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\nimport '../../App.css';\n\nclass AddNewItemForm extends React.Component {\n\n\n    state = {\n        error: false,\n        title: ''\n    }\n\n    onAddItemClick = () => {\n        let newTitle = this.state.title.trim();\n        if (newTitle === '') {\n            this.setState({error: true})\n        } else {\n            this.setState({title: '', error: false})\n            this.props.addItem(newTitle)\n        }\n\n    }\n    onTitleChanged = (e) => {\n        this.setState({\n            error: false,\n            title: e.currentTarget.value\n        })\n    }\n    onKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            this.onAddItemClick();\n        }\n\n    }\n\n    render = () => {\n        let error = this.state.error === true ? 'error' : ''\n\n        return (\n            <div className=\"todoList-newTaskForm\">\n\n\n                <input className={error}\n                       value={this.state.title} onChange={this.onTitleChanged}\n                       onKeyPress={this.onKeyPress}\n                       type=\"text\" placeholder=\"New item name\"/>\n                <button onClick={this.onAddItemClick}>Add</button>\n\n\n            </div>\n        );\n    }\n}\n\nexport default AddNewItemForm;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\n\n\nclass TodoListTask extends React.Component {\n    state = {\n        isEditMode: false,\n        isEditModePriority: false,\n        priority: ['high', 'medium', 'low']\n    }\n    activatedEditMode = () => {\n        this.setState({\n            isEditMode: true\n        })\n\n    }\n\n    deActivatedEditMode = () => {\n        this.setState({\n            isEditMode: false\n        })\n\n    }\n\n\n    // activatedEditModePriority = () => {\n    //     this.setState({\n    //         isEditModePriority: true\n    //     })\n    //\n    // }\n    //\n    // deActivatedEditModePriority = () => {\n    //     this.setState({\n    //         isEditModePriority: false\n    //     })\n    //\n    // }\n\n\n\n    onIsDoneChanged = (e) => {\n        this.props.changeStatus(this.props.task.id, e.currentTarget.checked)\n    }\n\n    onIsTitleChange = (e) => {\n        this.props.changeTitle(this.props.task.id, e.currentTarget.value)\n    }\n\n    onIsPriorityChanged = (e) => {\n        this.props.changePriority(this.props.task.id,e.currentTarget.value)\n\n    }\n\n\n    isTaskDeleted = () => {\n        this.props.deleteTask(this.props.task.id);\n    }\n\n\n    render = () => {\n        let checked = this.props.task.isDone === true ? 'done' : ''\n        return (\n            <div className={`todoList-task + ${checked}`}>\n                <input type=\"checkbox\" checked={this.props.task.isDone} onChange={this.onIsDoneChanged}/>\n                {this.state.isEditMode ?\n                    <input onChange={this.onIsTitleChange} value={this.props.task.title} autoFocus={true}\n                           onBlur={this.deActivatedEditMode}/> : <span onDoubleClick={this.activatedEditMode}>\n                    {this.props.task.id} - {this.props.task.title}</span>\n                }\n                ,\n\n                {/*<span>priority: {this.state.isEditModePriority ?*/}\n                {/*    <input onChange={this.onIsPriorityChanged} value={this.props.task.priority} autoFocus={true}*/}\n                {/*           onBlur={this.deActivatedEditModePriority}/> : <span onDoubleClick={this.activatedEditModePriority}> {this.props.task.priority} </span>*/}\n                {/*}*/}\n                {/*</span>*/}\n\n                <span > priority:\n                        <select onChange={this.onIsPriorityChanged} value={this.props.task.priority}>\n                            <option value={this.state.priority[0]} >{this.state.priority[0]}</option>\n                            <option value={this.state.priority[1]} >{this.state.priority[1]}</option>\n                            <option value={this.state.priority[2]}>{this.state.priority[2]}</option>\n                        </select>\n                    {/*{this.props.task.priority}*/}\n                    </span>\n\n\n                {/*<span>priority: {this.props.task.priority} </span>*/}\n                <span onClick={this.isTaskDeleted}> <FontAwesomeIcon className='times' icon={faTimes}/> </span>\n            </div>\n        );\n    }\n}\n\nTodoListTask.propTypes = {\n    title: PropTypes.string,\n    isDone: PropTypes.bool,\n    priority: PropTypes.string\n}\n\nexport default TodoListTask;\n\n\n\n\n\n","import React from 'react';\nimport '../../App.css';\nimport TodoListTask from \"./TodoListTask\";\nimport PropTypes from 'prop-types';\n\nclass TodoListTasks extends React.Component {\n\n    render = () => {\n        let taskElement = this.props.tasks.map(task =>\n            <TodoListTask key={task.id} changePriority={this.props.changePriority} deleteTask={this.props.deleteTask}\n                          changeTitle={this.props.changeTitle} task={task} changeStatus={this.props.changeStatus} />);\n\n\n        return (\n            <div className=\"todoList-tasks\">\n                {taskElement}\n            </div>\n\n        );\n    }\n}\nTodoListTasks.propTypes = {\n    tasks: PropTypes.array\n\n}\n\nexport default TodoListTasks;\n\n","import React from 'react';\nimport '../../App.css';\nimport PropTypes from 'prop-types';\n\nclass TodoListFooter extends React.Component {\n    state = {\n        isHidden: false\n    }\n\n\n\n    onAllFilterClick = () => {this.props.changeFilter(\"All\")}\n    onCompletedFilterClick = () => {this.props.changeFilter(\"Completed\")}\n    onActiveFilterClick = () => {this.props.changeFilter(\"Active\")}\n    onShowFiltersClick = () => {\n        this.setState({isHidden: false})\n\n    }\n    onHideFiltersClick = () => {\n        this.setState({isHidden: true})\n    }\n\n\n\n    render = () => {\n        let classForAll = this.props.filerValue === \"All\" ? \"filter-active\" : \"\";\n        let classForCompleted = this.props.filerValue === \"Completed\" ? \"filter-active\" : \"\";\n        let classForActive = this.props.filerValue === \"Active\" ? \"filter-active\" : \"\";\n\n\n        return (\n            <div className=\"todoList-footer\">\n                { !this.state.isHidden && <div>\n                <button onClick={this.onAllFilterClick} className={classForAll}>All</button>\n                <button onClick={this.onCompletedFilterClick} className={classForCompleted}>Completed</button>\n                <button onClick={this.onActiveFilterClick} className={classForActive}>Active</button>\n            </div>}\n\n\n                {!this.state.isHidden && <span onClick={this.onHideFiltersClick}>hide</span>}\n                {this.state.isHidden && <span onClick={this.onShowFiltersClick}>show</span>}\n        </div>\n\n        );\n    }\n}\nTodoListFooter.propTypes = {\n    filterValue: PropTypes.string\n}\n\nexport default TodoListFooter;\n\n","import React from 'react';\nimport '../../App.css';\n\nclass TodoListTitle extends React.Component {\n\n\n\n\n    render = () => {\n\n\n        return (\n            <div className=\"todoList-title\">\n                <h3 className=\"todoList-title__title\">{this.props.title}</h3>\n            </div>\n        );\n    }\n}\n\nexport default TodoListTitle;","export let saveState = (key, state) => {\r\n    let stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n\r\n}\r\n\r\n\r\nexport let restoreState = (key, defaultState) => {\r\n\r\n    let stateAsString = localStorage.getItem(key);\r\n    if (stateAsString != null ) {\r\n        defaultState = JSON.parse(stateAsString);\r\n    }\r\n\r\n    return defaultState;\r\n\r\n}","import React from 'react';\r\nimport '../../App.css';\r\nimport AddNewItemForm from \"./AddNewItemForm\";\r\nimport TodoListTasks from \"./TodoListTasks\";\r\nimport TodoListFooter from \"./TodoListFooter\";\r\n\r\nimport TodoListTitle from \"./TodoListTitle\";\r\nimport {restoreState, saveState} from \"./stateMod\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faTimes} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nclass Tuesday extends React.Component {\r\n\r\n\r\n    state = {\r\n        tasks: [\r\n            // {id: 0, title: \"JS\", isDone: true, priority: \"high\"},\r\n            // {id: 1,title: \"HTML\", isDone: false, priority: \"low\"},\r\n            // {id: 2,title: \"CSS\", isDone: false, priority: \"medium\"},\r\n            // {id: 3,title: \"React\", isDone: true, priority: \"high\"}\r\n        ],\r\n\r\n        filterValue: \"All\"\r\n    };\r\n    nextTaskId = 0;\r\n\r\n\r\n    saveLocalStorage = () => {\r\n        saveState('state-' + this.props.id, this.state)\r\n    }\r\n\r\n\r\n    restoreLocalStorage = () => {\r\n        let stateNew = restoreState('state-' + this.props.id, this.state);\r\n        this.setState(stateNew, () => {\r\n            this.state.tasks.forEach(t => {\r\n                    if (t.id >= this.nextTaskId) {\r\n                        this.nextTaskId = t.id + 1\r\n                    }\r\n                }\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.restoreLocalStorage();\r\n    }\r\n\r\n\r\n    addTask = (newTitle) => {\r\n\r\n        let newTask = {\r\n            id: this.nextTaskId,\r\n            title: newTitle,\r\n            isDone: false,\r\n            priority: \"\"\r\n        };\r\n        this.nextTaskId++;\r\n        let newTasks = [...this.state.tasks, newTask];\r\n\r\n        this.setState({\r\n            tasks: newTasks\r\n        }, this.saveLocalStorage);\r\n\r\n    }\r\n\r\n    deleteTask = (taskId) => {\r\n        let newTasks = this.state.tasks.filter(t => {\r\n            return t.id !== taskId;\r\n        });\r\n        this.setState({\r\n            tasks: newTasks\r\n        }, this.saveLocalStorage);\r\n\r\n    }\r\n\r\n    isTodoListDeleted = () => {\r\n        this.props.deleteTodoList(this.props.id);\r\n    }\r\n\r\n\r\n    changeFilter = (newFilterValue) => {\r\n        this.setState({\r\n            filterValue: newFilterValue\r\n        });\r\n    }\r\n\r\n    changeTask = (taskId, obj) => {\r\n        let newTasks = this.state.tasks.map(t => {\r\n            if (t.id !== taskId) {\r\n                return t;\r\n            } else {\r\n                return {...t, ...obj};\r\n            }\r\n        });\r\n        this.setState({\r\n            tasks: newTasks\r\n        }, this.saveLocalStorage);\r\n    }\r\n\r\n\r\n    changeStatus = (taskId, isDone) => {\r\n        this.changeTask(taskId, {isDone: isDone})\r\n\r\n    }\r\n\r\n    changeTitle = (taskId, title) => {\r\n        this.changeTask(taskId, {title: title})\r\n\r\n    }\r\n\r\n    changePriority = (taskId, priority) => {\r\n        this.changeTask(taskId, {priority: priority})\r\n    }\r\n\r\n\r\n    render = () => {\r\n        let filteredTasks = this.state.tasks.filter(t => {\r\n            switch (this.state.filterValue) {\r\n                case \"Active\":\r\n                    return t.isDone === false;\r\n                case \"Completed\":\r\n                    return t.isDone === true;\r\n                case \"All\":\r\n                    return true;\r\n\r\n                default:\r\n                    return true;\r\n\r\n            }\r\n        })\r\n\r\n        return (\r\n\r\n            <div className=\"todoList\">\r\n                <div className='header'>\r\n                    <TodoListTitle title={this.props.title}/> <span onClick={this.isTodoListDeleted}> <FontAwesomeIcon\r\n                    className='times-header' icon={faTimes}/></span>\r\n                </div>\r\n                <AddNewItemForm title={this.props.title} addItem={this.addTask}/>\r\n                <TodoListTasks changePriority={this.changePriority} deleteTask={this.deleteTask}\r\n                               changeTitle={this.changeTitle} tasks={filteredTasks}\r\n                               changeStatus={this.changeStatus}/>\r\n                <TodoListFooter filerValue={this.state.filterValue} changeFilter={this.changeFilter}/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Tuesday;\r\n\r\n","import React from 'react';\nimport '../../App.css';\n\nclass Loader extends React.Component {\n\n\n\n\n    render = () => {\n\n\n        return (\n            <div className=\"three col\">\n                <div className=\"loader\" id=\"loader-3\"> </div>\n            </div>\n        );\n    }\n}\n\nexport default Loader;","import React from 'react';\r\nimport '../../App.css';\r\nimport AddNewItemForm from \"./AddNewItemForm\";\r\nimport Tuesday from \"./Tuesday\";\r\nimport {restoreState, saveState} from \"./stateMod\";\r\nimport load from './load.gif'\r\nimport Loader from \"./Loader\";\r\n\r\nclass AppTuesday extends React.Component {\r\n    state = {\r\n        todolists: [\r\n            // {id:1, title:'What to learn?'},\r\n            // {id:2, title:'Week tasks'},\r\n            // {id:3, title:'Year tasks'}\r\n        ],\r\n        loading: true\r\n    }\r\n\r\n    nextTodoListId = 0;\r\n    saveState = () => {\r\n        let stateAsString = JSON.stringify(this.state);\r\n        localStorage.setItem('todolists', stateAsString)\r\n\r\n    }\r\n    restoreState = () => {\r\n        let state = {\r\n            todolists: []\r\n        };\r\n        let stateAsString = localStorage.getItem('todolists');\r\n        if (stateAsString) {\r\n            state = JSON.parse(stateAsString);\r\n        }\r\n        this.setState(state, () => {\r\n            this.state.todolists.forEach(t => {\r\n                    if (t.id >= this.nextTodoListId) {\r\n                        this.nextTodoListId = t.id + 1\r\n                    }\r\n                }\r\n            )\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(()=> {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }, 3000)\r\n        this.restoreState();\r\n    }\r\n\r\n    addTodoList = (title) => {\r\n        let todoList = {\r\n            id: this.nextTodoListId,\r\n            title: title\r\n        }\r\n        this.nextTodoListId++;\r\n        let newTodoList = [...this.state.todolists, todoList];\r\n        this.setState({\r\n            todolists: newTodoList\r\n        }, this.saveState)\r\n    }\r\n\r\n    deleteTodoList = (todoListId) => {\r\n\r\n        let newTodoList = this.state.todolists.filter(t => {\r\n            return t.id !== todoListId;\r\n        });\r\n        this.setState({\r\n            todolists: newTodoList\r\n        }, this.saveState);\r\n\r\n\r\n    }\r\n\r\n    render = () => {\r\n        const todolist = this.state.todolists.map(tl => <Tuesday deleteTodoList={this.deleteTodoList} key={tl.id} id={tl.id} title={tl.title}/>)\r\n\r\n\r\n        return (\r\n            <div className='tuesday'>\r\n                {this.state.loading ?\r\n                    <div className='loading'><Loader /> </div>\r\n                     :\r\n                    <div><AddNewItemForm addItem={this.addTodoList}/>\r\n                        <div className=\"AppTuesday\">\r\n                            {todolist}\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                }\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default AppTuesday;\r\n\r\n\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Monday from \"./components/Monday/Monday\";\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport Nav from \"./components/Nav/Nav\";\r\nimport Tuesday from \"./components/Tuesday/Tuesday\";\r\nimport AppTuesday from \"./components/Tuesday/AppTuesday\";\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <HashRouter>\r\n\r\n            <div className=\"App\">\r\n                <Nav />\r\n\r\n\r\n                <div className='wrApp'>\r\n                    <Route path='/monday' component={Monday} />\r\n                    <Route path='/tuesday' component={AppTuesday} />\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n            </HashRouter>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}